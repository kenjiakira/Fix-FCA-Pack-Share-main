const { setBalance, getBalance, addBalance } = require('../utils/currencies');

module.exports = {
    name: "data",
    description: "Qu·∫£n l√Ω d·ªØ li·ªáu ng∆∞·ªùi d√πng",
    dev: "HNT",
    usages: [
        "data view [@tag]: Xem s·ªë d∆∞ c·ªßa ng∆∞·ªùi d√πng",
        "data set [@tag] [s·ªë ti·ªÅn] [l√Ω do]: ƒê·∫∑t s·ªë d∆∞ m·ªõi",
        "data add [@tag] [s·ªë ti·ªÅn] [l√Ω do]: Th√™m s·ªë ti·ªÅn",
        "data del [@tag] [s·ªë ti·ªÅn] [l√Ω do]: Tr·ª´ s·ªë ti·ªÅn"
    ].join('\n'),
    cooldown: 3,
    permissions: ['Administrator'],

    execute: async function(message, args) {  
        if (!message.member.permissions.has('Administrator')) {
            return message.reply('‚ùå B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y!');
        }

        const action = args[0];
        if (!action) {
            return message.reply("‚ùå Vui l√≤ng s·ª≠ d·ª•ng: " + this.usages);
        }

        const user = message.mentions.users.first();
        if (!user) {
            return message.reply("‚ùå Vui l√≤ng tag ng∆∞·ªùi d√πng!");
        }

        const currentBalance = Math.max(0, getBalance(user.id));

        switch (action.toLowerCase()) {
            case 'view': {
                return message.reply(`üí∞ S·ªë d∆∞ c·ªßa ${user.username}: ${currentBalance.toLocaleString('vi-VN')} Xu`);
            }

            case 'set': {
                if (!args[2]) {
                    return message.reply("‚ùå Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn!");
                }

                const amount = parseInt(args[2]);
                if (isNaN(amount) || amount < 0) {
                    return message.reply("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!");
                }

                const reason = args.slice(3).join(' ') || 'Kh√¥ng c√≥ l√Ω do';
                
                setBalance(user.id, amount);
                
                return message.reply(
                    `‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·ªë d∆∞ cho ${user.username}\n` +
                    `S·ªë d∆∞ c≈©: ${currentBalance.toLocaleString('vi-VN')} Xu\n` +
                    `S·ªë d∆∞ m·ªõi: ${amount.toLocaleString('vi-VN')} Xu\n` +
                    `L√Ω do: ${reason}`
                );
            }

            case 'add': {
                if (!args[2]) {
                    return message.reply("‚ùå Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn!");
                }

                const amount = parseInt(args[2]);
                if (isNaN(amount) || amount <= 0) {
                    return message.reply("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!");
                }

                const reason = args.slice(3).join(' ') || 'Kh√¥ng c√≥ l√Ω do';
                
                addBalance(user.id, amount);
                const newBalance = getBalance(user.id);
                
                return message.reply(
                    `‚úÖ ƒê√£ c·ªông ti·ªÅn cho ${user.username}\n` +
                    `S·ªë d∆∞ c≈©: ${currentBalance.toLocaleString('vi-VN')} Xu\n` +
                    `C·ªông th√™m: +${amount.toLocaleString('vi-VN')} Xu\n` +
                    `S·ªë d∆∞ m·ªõi: ${newBalance.toLocaleString('vi-VN')} Xu\n` +
                    `L√Ω do: ${reason}`
                );
            }

            case 'del': {
                if (!args[2]) {
                    return message.reply("‚ùå Vui l√≤ng nh·∫≠p s·ªë ti·ªÅn!");
                }

                const amount = parseInt(args[2]);
                if (isNaN(amount) || amount <= 0) {
                    return message.reply("‚ùå S·ªë ti·ªÅn kh√¥ng h·ª£p l·ªá!");
                }

                const reason = args.slice(3).join(' ') || 'Kh√¥ng c√≥ l√Ω do';
                
                // Ensure balance doesn't go negative
                const deductAmount = Math.min(currentBalance, amount);
                addBalance(user.id, -deductAmount);
                const newBalance = getBalance(user.id);
                
                return message.reply(
                    `‚úÖ ƒê√£ tr·ª´ ti·ªÅn c·ªßa ${user.username}\n` +
                    `S·ªë d∆∞ c≈©: ${currentBalance.toLocaleString('vi-VN')} Xu\n` +
                    `Tr·ª´ ƒëi: -${deductAmount.toLocaleString('vi-VN')} Xu\n` +
                    `S·ªë d∆∞ m·ªõi: ${newBalance.toLocaleString('vi-VN')} Xu\n` +
                    `L√Ω do: ${reason}`
                );
            }

            default:
                return message.reply("‚ùå H√†nh ƒë·ªông kh√¥ng h·ª£p l·ªá!\n" + this.usages);
        }
    }
};
