const { getBalance, addBalance } = require('../utils/currencies');

module.exports = {
    name: 'tx',
    description: 'Ch∆°i t√†i x·ªâu v·ªõi Bot',
    usage: 'tx <t√†i/x·ªâu> <s·ªë xu c∆∞·ª£c>',
    execute: async function(message, args) {
        try {
            if (args.length !== 2) {
                return message.reply('‚ùå Vui l√≤ng s·ª≠ d·ª•ng: !taixiu <t√†i/x·ªâu> <s·ªë xu c∆∞·ª£c>');
            }

            const choice = args[0].toLowerCase();
            if (choice !== 't√†i' && choice !== 'x·ªâu') {
                return message.reply('‚ùå Vui l√≤ng ch·ªçn t√†i ho·∫∑c x·ªâu!');
            }

            const bet = parseInt(args[1]);
            if (isNaN(bet) || bet < 1000) {
                return message.reply('‚ùå S·ªë xu c∆∞·ª£c ph·∫£i l√† s·ªë v√† t·ªëi thi·ªÉu 1,000 xu!');
            }

            const userID = message.author.id;
            const balance = getBalance(userID);

            if (balance < bet) {
                return message.reply('‚ùå B·∫°n kh√¥ng ƒë·ªß xu ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c!');
            }
       
            const dice1 = Math.floor(Math.random() * 6) + 1;
            const dice2 = Math.floor(Math.random() * 6) + 1;
            const dice3 = Math.floor(Math.random() * 6) + 1;
            const total = dice1 + dice2 + dice3;

            const result = total >= 11 ? 't√†i' : 'x·ªâu';
            const won = choice === result;

            const winnings = won ? bet : -bet;
            addBalance(userID, winnings);

            const newBalance = getBalance(userID);
            const diceEmoji = ['‚öÄ', '‚öÅ', '‚öÇ', '‚öÉ', '‚öÑ', '‚öÖ'];
            
            const reply = await message.reply(
                `üé≤ K·∫øt qu·∫£: ${diceEmoji[dice1-1]} ${diceEmoji[dice2-1]} ${diceEmoji[dice3-1]}\n` +
                `T·ªïng ƒëi·ªÉm: ${total} (${result.toUpperCase()})\n` +
                `${won ? 'üéâ B·∫°n ƒë√£ th·∫Øng' : 'üíî B·∫°n ƒë√£ thua'} ${Math.abs(winnings).toLocaleString('vi-VN')} xu\n` +
                `S·ªë d∆∞ hi·ªán t·∫°i: ${newBalance.toLocaleString('vi-VN')} xu\n`,
            );

            setTimeout(() => {
                message.delete().catch(err => console.error('Kh√¥ng th·ªÉ x√≥a l·ªánh:', err));
                reply.delete().catch(err => console.error('Kh√¥ng th·ªÉ x√≥a k·∫øt qu·∫£:', err));
            }, 10000);

        } catch (error) {
            console.error('[DISCORD] Taixiu command error:', error);
            return message.reply('‚ùå ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh ch∆°i game.');
        }
    }
};
