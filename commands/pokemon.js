const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports = {
  name: "pokemon",
  dev: "HNT",
  info: "Pokemon",
  onPrefix: true,
  dmUser: false,
  usedby: 0,
  usages: "pokemon",
  cooldowns: 5,

  onLaunch: async ({ api, event }) => {
    try {
      const randomId = Math.floor(Math.random() * 898) + 1;
      
      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${randomId}`);
      const pokemon = response.data;
      
      const imageUrl = pokemon.sprites.other['official-artwork'].front_default;
      const imageResponse = await axios.get(imageUrl, { responseType: 'arraybuffer' });
      
      const imagePath = path.join(__dirname, '../commands/cache/pokemon.png');
      fs.writeFileSync(imagePath, imageResponse.data);

      const message = {
        body: `üåü Th√¥ng Tin Pokemon üåü\n\n` +
              `T√™n: ${pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\n` +
              `M√£ s·ªë: #${pokemon.id}\n` +
              `Chi·ªÅu cao: ${pokemon.height/10}m\n` +
              `C√¢n n·∫∑ng: ${pokemon.weight/10}kg\n` +
              `H·ªá: ${pokemon.types.map(type => {
                const typeMap = {
                  normal: "Th∆∞·ªùng",
                  fire: "L·ª≠a",
                  water: "N∆∞·ªõc",
                  electric: "ƒêi·ªán",
                  grass: "C·ªè",
                  ice: "BƒÉng",
                  fighting: "Chi·∫øn ƒë·∫•u",
                  poison: "ƒê·ªôc",
                  ground: "ƒê·∫•t",
                  flying: "Bay",
                  psychic: "Si√™u linh",
                  bug: "B·ªç",
                  rock: "ƒê√°",
                  ghost: "Ma",
                  dragon: "R·ªìng",
                  dark: "B√≥ng t·ªëi",
                  steel: "Th√©p",
                  fairy: "Ti√™n"
                };
                return typeMap[type.type.name] || type.type.name;
              }).join(', ')}\n` +
              `Kinh nghi·ªám c∆° b·∫£n: ${pokemon.base_experience}`,
        attachment: fs.createReadStream(imagePath)
      };

      await api.sendMessage(message, event.threadID, event.messageID);

      fs.unlink(imagePath, (err) => {
        if (err) console.error('Error deleting temporary Pokemon image:', err);
      });

    } catch (error) {
      console.error(error);
      return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi t√¨m Pokemon. Vui l√≤ng th·ª≠ l·∫°i sau!", event.threadID, event.messageID);
    }
  }
};
