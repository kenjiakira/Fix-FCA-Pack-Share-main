const fs = require('fs');
const path = require('path');

module.exports = {
    name: "admin",
    dev: "HNT",
    category: "Kh√°c",
    info: "Xem danh s√°ch admin, mod v√† support team",
    usages: [
        "/admin - Xem danh s√°ch qu·∫£n tr·ªã vi√™n"
    ],
    cooldowns: 5,
    onPrefix: true,

    onLaunch: async function({ api, event }) {
        const { threadID, messageID } = event;
        const adminPath = path.join(__dirname, '..', 'admin.json');
        
        try {
            const adminData = JSON.parse(fs.readFileSync(adminPath, 'utf8'));
            const userDataPath = path.join(__dirname, '..', 'events/cache/userData.json');
            
            const userData = JSON.parse(fs.readFileSync(userDataPath, 'utf8'));
        
            async function getUserInfoSafely(api, uid, userData) {
                try {
                    const userInfo = await api.getUserInfo(uid);
                    if (userInfo && userInfo[uid]) {
                        return {
                            uid: uid,
                            name: userInfo[uid].name || userData[uid]?.name || "Kh√¥ng x√°c ƒë·ªãnh",
                            vanity: userInfo[uid].vanity || uid,
                            gender: userInfo[uid].gender || userData[uid]?.gender,
                            isValid: true
                        };
                    }
                } catch (err) {
                    console.log(`Info: Kh√¥ng th·ªÉ l·∫•y th√¥ng tin c·ªßa ID ${uid}, s·ª≠ d·ª•ng d·ªØ li·ªáu cached`);
                    return {
                        uid: uid,
                        name: userData[uid]?.name || "Ng∆∞·ªùi d√πng Facebook",
                        vanity: uid,
                        gender: userData[uid]?.gender || 0,
                        isValid: false
                    };
                }
            }

            const adminList = [];
            for (const adminUID of adminData.adminUIDs) {
                if (!adminUID) continue;
                const info = await getUserInfoSafely(api, adminUID, userData);
                if (info) {
                    adminList.push({
                        ...info,
                        type: "Admin"
                    });
                }
            }

            const modList = [];
            for (const modUID of adminData.moderatorUIDs) {
                if (!modUID) continue;
                const info = await getUserInfoSafely(api, modUID, userData);
                if (info) {
                    modList.push({
                        ...info,
                        type: "Moderator"
                    });
                }
            }

            const supportList = [];
            for (const supportUID of (adminData.supportUIDs || [])) {
                if (!supportUID) continue;
                const info = await getUserInfoSafely(api, supportUID, userData);
                if (info) {
                    supportList.push({
                        ...info,
                        type: "SupportTeam"
                    });
                }
            }

            let msg = "üë• QU·∫¢N L√ù H·ªÜ TH·ªêNG BOT\n";
            msg += "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n";

            msg += "üëë ADMIN:\n";
            if (adminList.length === 0) {
                msg += "Ch∆∞a c√≥ Admin n√†o\n\n";
            } else {
                for (let i = 0; i < adminList.length; i++) {
                    const admin = adminList[i];
                    const genderIcon = admin.gender === 2 ? "üë®" : admin.gender === 1 ? "üë©" : "üë§";
                    
                    msg += `${genderIcon} ${admin.name}${!admin.isValid ? " (üíæ)" : ""}\n`;
                    msg += `   ‚îú‚îÄID: ${admin.uid}\n`;
                    msg += `   ‚îî‚îÄFB: facebook.com/${admin.vanity}\n`;
                    if (i < adminList.length - 1) msg += "\n";
                }
                msg += "\n";
            }

            if (modList.length > 0) {
                msg += "‚öîÔ∏è ƒêI·ªÄU H√ÄNH VI√äN:\n";
                for (let i = 0; i < modList.length; i++) {
                    const mod = modList[i];
                    const genderIcon = mod.gender === 2 ? "üë®" : mod.gender === 1 ? "üë©" : "üë§";
                    
                    msg += `${genderIcon} ${mod.name}${!mod.isValid ? " (üíæ)" : ""}\n`;
                    msg += `   ‚îú‚îÄID: ${mod.uid}\n`;
                    msg += `   ‚îî‚îÄFB: facebook.com/${mod.vanity}\n`;
                    if (i < modList.length - 1) msg += "\n";
                }
                msg += "\n";
            }

            if (supportList.length > 0) {
                msg += "üíé SUPPORT TEAM:\n";
                for (let i = 0; i < supportList.length; i++) {
                    const support = supportList[i];
                    const genderIcon = support.gender === 2 ? "üë®" : support.gender === 1 ? "üë©" : "üë§";
                    
                    msg += `${genderIcon} ${support.name}${!support.isValid ? " (üíæ)" : ""}\n`;
                    msg += `   ‚îú‚îÄID: ${support.uid}\n`;
                    msg += `   ‚îî‚îÄFB: facebook.com/${support.vanity}\n`;
                    if (i < supportList.length - 1) msg += "\n";
                }
            }

            msg += "\nü§ñ TH√îNG TIN BOT:\n";
            msg += `T√™n: ${adminData.botName || "AKI BOT"}\n`;
            msg += `Ch·ªß s·ªü h·ªØu: ${adminData.ownerName || "Kenji Akira"}\n`;
            msg += `Prefix: ${adminData.prefix || "."}\n`;
            msg += `Facebook: facebook.com/${adminData.facebookLink || "61573427362389"}\n`;
            
            return api.sendMessage(msg, threadID, messageID);
            
        } catch (error) {
            console.error('L·ªói:', error);
            return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫£i th√¥ng tin!", threadID, messageID);
        }
    }
};
