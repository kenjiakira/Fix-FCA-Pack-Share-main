const axios = require('axios');

module.exports = {
    name: "anon",
    usedby: 0,
    category: "Tools",
    info: "G·ª≠i tin nh·∫Øn ·∫©n danh ƒë·∫øn ng∆∞·ªùi d√πng qua ngl.link",
    dev: "HNT",
    onPrefix: true,
    usages: "<t√™n ng∆∞·ªùi nh·∫≠n> [n·ªôi dung]",
    cooldowns: 10,

    onLaunch: async function ({ api, event, target }) {
        const { threadID, messageID } = event;

        if (!target[0]) {
            return api.sendMessage(
                "üïäÔ∏è G·ª≠i tin nh·∫Øn ·∫©n danh:\n\n" +
                "C√°ch d√πng: anon <username> <n·ªôi dung>\n" +
                "Ho·∫∑c: anon <username> -c <s·ªë l·∫ßn> <n·ªôi dung>\n\n" +
                "V√≠ d·ª•:\n" +
                "1. anon johndoe Hello!\n" +
                "2. anon johndoe -c 5 Hello!\n\n" +
                "L∆∞u √Ω:\n" +
                "- Username l√† t√™n ngl.link c·ªßa ng∆∞·ªùi nh·∫≠n\n" +
                "- S·ªë l·∫ßn g·ª≠i t·ªëi ƒëa l√† 10 tin/l·∫ßn\n" +
                "- Tin nh·∫Øn s·∫Ω ƒë∆∞·ª£c g·ª≠i ·∫©n danh",
                threadID, messageID
            );
        }

        const username = target[0];
        let count = 1;
        let message;

        if (target[1] === '-c') {
            count = parseInt(target[2]);
            if (isNaN(count) || count < 1 || count > 10) {
                return api.sendMessage("‚ö†Ô∏è S·ªë l·∫ßn g·ª≠i ph·∫£i t·ª´ 1 ƒë·∫øn 10!", threadID, messageID);
            }
            message = target.slice(3).join(' ');
        } else {
            message = target.slice(1).join(' ');
        }

        if (!message) {
            return api.sendMessage("‚ö†Ô∏è Vui l√≤ng nh·∫≠p n·ªôi dung tin nh·∫Øn!", threadID, messageID);
        }

        try {
            const headers = {
                'referer': `https://ngl.link/${username}`,
                'accept-language': 'vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7'
            };

            const data = {
                'username': username,
                'question': message,
                'deviceId': 'anon-' + Math.random().toString(36).substr(2, 9),
                'gameSlug': '',
                'referrer': ''
            };

            let successCount = 0;
            const progressMsg = await api.sendMessage("üïäÔ∏è ƒêang g·ª≠i tin nh·∫Øn...", threadID);

            for (let i = 0; i < count; i++) {
                try {
                    const response = await axios.post('https://ngl.link/api/submit', data, { headers });
                    if (response.status === 200) successCount++;
                    await new Promise(resolve => setTimeout(resolve, 1000));
                } catch {
                    continue;
                }
            }

            if (successCount > 0) {
                await api.editMessage({
                    body: `‚úÖ ƒê√£ g·ª≠i th√†nh c√¥ng!\n\n` +
                          `üìù N·ªôi dung: ${message}\n` +
                          `üë§ ƒê·∫øn: @${username}\n` +
                          `üì® S·ªë tin ƒë√£ g·ª≠i: ${successCount}/${count}`,
                    messageID: progressMsg.messageID,
                    threadID: event.threadID
                });
            } else {
                throw new Error("Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn");
            }

            setTimeout(() => api.unsendMessage(progressMsg.messageID), 10000);

        } catch (error) {
            return api.sendMessage("‚ùå L·ªói: Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn. Vui l√≤ng ki·ªÉm tra l·∫°i username ho·∫∑c th·ª≠ l·∫°i sau!", threadID, messageID);
        }
    }
};
