const { getBalance, updateBalance } = require('../utils/currencies');

const messages = {
    minBalance: (amount) => `B·∫°n c·∫ßn √≠t nh·∫•t ${amount.toLocaleString('vi-VN')} Xu ƒë·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông tr·ªôm c·∫Øp (ph√≠ b·∫£o hi·ªÉm).`,
    noMoney: "Ng∆∞·ªùi n√†y kh√¥ng c√≥ xu trong t√†i kho·∫£n.",
    invalidID: "Vui l√≤ng nh·∫≠p m·ªôt ID h·ª£p l·ªá (ch·ªâ l√† s·ªë). V√≠ d·ª•: stolen 1234567890",
    usage: "C√°ch s·ª≠ d·ª•ng l·ªánh `stolen`:\n\n" +
           "1. `stolen [ID]`: Tr·ªôm ti·ªÅn t·ª´ ng∆∞·ªùi d√πng Facebook qua ID c·ªßa h·ªç. V√≠ d·ª•: `stolen 1234567890`\n" +
           "   - Thay `1234567890` b·∫±ng ID c·ªßa ng∆∞·ªùi b·∫°n mu·ªën tr·ªôm ti·ªÅn.\n\n" +
           "2. `stolen Reply`: Tr·ªôm ti·ªÅn t·ª´ ng∆∞·ªùi m√† b·∫°n ƒëang tr·∫£ l·ªùi tin nh·∫Øn.\n" +
           "   - Tr·∫£ l·ªùi tin nh·∫Øn c·ªßa ng∆∞·ªùi ƒë√≥ v√† g√µ `stolen Reply` ƒë·ªÉ tr·ªôm ti·ªÅn c·ªßa h·ªç.\n\n" +
           "3. `stolen @Tag`: Tr·ªôm ti·ªÅn t·ª´ ng∆∞·ªùi ƒë∆∞·ª£c tag trong tin nh·∫Øn.\n" +
           "   - G√µ `@T√™n ng∆∞·ªùi` ƒë·ªÉ tag v√† tr·ªôm ti·ªÅn c·ªßa ng∆∞·ªùi ƒë√≥.",
    cooldownActive: "‚è∞ B·∫°n c·∫ßn ƒë·ª£i th√™m {time} gi√¢y n·ªØa ƒë·ªÉ c√≥ th·ªÉ tr·ªôm ti·∫øp!",
    protected: "üõ°Ô∏è Ng∆∞·ªùi n√†y ƒëang ƒë∆∞·ª£c b·∫£o v·ªá! H√£y th·ª≠ l·∫°i sau.",
    selfSteal: "‚ùå B·∫°n kh√¥ng th·ªÉ tr·ªôm ti·ªÅn c·ªßa ch√≠nh m√¨nh!"
};

module.exports = {
    name: "stolen",
    dev: "HNT",
    info: "Tr·ªôm ti·ªÅn t·ª´ ng∆∞·ªùi kh√°c",
    onPrefix: true,
    dmUser: false,
    usedby: 0,
    usages: "stolen ID, stolen Reply, stolen @Tag",
    cooldown: 0, 

    onLaunch: async ({ api, event, target }) => {
        try {
            let victimID;

            if (event.type === 'message_reply') {
                victimID = event.messageReply.senderID;
            } else if (Object.keys(event.mentions).length > 0) {
                const mentionedUID = Object.keys(event.mentions)[0];
                victimID = mentionedUID;
            } else if (target.length === 0) {
                return api.sendMessage(messages.usage, event.threadID, event.messageID);
            } else {
                victimID = target[0];
                if (isNaN(victimID)) {
                    return api.sendMessage(messages.invalidID, event.threadID, event.messageID);
                }
            }

            if (victimID === event.senderID) {
                return api.sendMessage(messages.selfSteal, event.threadID, event.messageID);
            }

            let victimName;
            try {
                const victimInfo = await api.getUserInfo(victimID);
                victimName = victimInfo[victimID].name;
            } catch {
                victimName = "Ng∆∞·ªùi d√πng";
            }

            const userBalance = getBalance(event.senderID);
            const minBalance = 5000;
            if (userBalance < minBalance) {
                return api.sendMessage(messages.minBalance(minBalance), event.threadID, event.messageID);
            }

            const victimBalance = getBalance(victimID);
            if (victimBalance <= 0) {
                return api.sendMessage(messages.noMoney, event.threadID, event.messageID);
            }

            const protection = Math.random() < 0.3;
            if (protection) {
                return api.sendMessage(messages.protected, event.threadID, event.messageID);
            }

            const successRate = Math.random();
            if (successRate < 0.5) { 
                const maxStealPercent = 0.3; 
                const maxStealAmount = Math.min(victimBalance * maxStealPercent, 100000);
                const stolenAmount = Math.floor(Math.random() * maxStealAmount) + 5000;
                
                updateBalance(victimID, -stolenAmount);
                updateBalance(event.senderID, stolenAmount);

                const successMessages = [
                    `ü¶π‚Äç‚ôÇÔ∏è B·∫°n ƒë√£ l·∫ªn v√†o k√©t s·∫Øt c·ªßa ${victimName} v√† l·∫•y ƒë∆∞·ª£c`,
                    `üíª HACK TH√ÄNH C√îNG!\nB·∫°n ƒë√£ x√¢m nh·∫≠p t√†i kho·∫£n c·ªßa ${victimName} v√† chuy·ªÉn`,
                    `üé≠ Tr·ªôm th√†nh c√¥ng!\nB·∫°n ƒë√£ ƒë·ªôt nh·∫≠p v√†o nh√† c·ªßa ${victimName} v√† l·∫•y ƒë∆∞·ª£c`,
                    `üïµÔ∏è B·∫°n ƒë√£ th√†nh c√¥ng ƒë√°nh l·ª´a ${victimName} v√† chi·∫øm ƒë∆∞·ª£c`,
                    `üéØ Phi v·ª• ho√†n h·∫£o! B·∫°n ƒë√£ l·∫•y ƒë∆∞·ª£c t·ª´ ${victimName}`
                ];
                const randomMsg = successMessages[Math.floor(Math.random() * successMessages.length)];

                this.cooldown = 180; 

                return api.sendMessage(
                    `‚îÅ‚îÅ‚îÅ„Äé STOLEN SUCCESS „Äè‚îÅ‚îÅ‚îÅ\n\n` +
                    `${randomMsg} ${stolenAmount.toLocaleString('vi-VN')} Xu üí∞\n\n` +
                    `üë§ N·∫°n nh√¢n: ${victimName}\n` +
                    `üÜî ID: ${victimID}\n` +
                    `üí≥ S·ªë d∆∞ c·ªßa b·∫°n: ${getBalance(event.senderID).toLocaleString('vi-VN')} Xu\n` +
                    `‚è∞ Th·ªùi gian ch·ªù: ${this.cooldown} gi√¢y\n\n` +
                    `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
                    event.threadID, event.messageID
                );
            } else {
                const penaltyPercent = Math.random() * (0.3 - 0.1) + 0.1;
                const penalty = Math.floor(userBalance * penaltyPercent);
                updateBalance(event.senderID, -penalty);

                const failMessages = [
                    `üöî B·∫°n ƒë√£ b·ªã b·∫£o v·ªá nh√† ${victimName} ph√°t hi·ªán v√† b√°o c·∫£nh s√°t!`,
                    `‚ö†Ô∏è ${victimName} ƒë√£ b·∫Øt qu·∫£ tang b·∫°n ƒëang tr·ªôm ti·ªÅn!`,
                    `‚ùå Th·∫•t b·∫°i! ${victimName} ƒë√£ c√†i ƒë·∫∑t camera an ninh!`,
                    `üö® H·ªá th·ªëng b√°o ƒë·ªông c·ªßa ${victimName} ƒë√£ k√≠ch ho·∫°t!`,
                    `üí• B·∫°n b·ªã ph√°t hi·ªán v√† ${victimName} ƒë√£ g·ªçi c·∫£nh s√°t!`
                ];
                const randomFailMsg = failMessages[Math.floor(Math.random() * failMessages.length)];

                this.cooldown = 420; 

                return api.sendMessage(
                    `‚îÅ‚îÅ‚îÅ„Äé STOLEN FAILED „Äè‚îÅ‚îÅ‚îÅ\n\n` +
                    `${randomFailMsg}\n\n` +
                    `üìå B·∫°n b·ªã ph·∫°t: ${penalty.toLocaleString('vi-VN')} Xu\n` +
                    `üí≥ S·ªë d∆∞ c√≤n l·∫°i: ${getBalance(event.senderID).toLocaleString('vi-VN')} Xu\n` +
                    `‚è∞ Th·ªùi gian ch·ªù: ${this.cooldown} gi√¢y\n\n` +
                    `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`,
                    event.threadID, event.messageID
                );
            }

        } catch (error) {
            console.error(error);
            return api.sendMessage(
                "‚îÅ‚îÅ‚îÅ„Äé ERROR „Äè‚îÅ‚îÅ‚îÅ\n\n" +
                "‚ùå C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.\n\n" +
                "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
                event.threadID, event.messageID
            );
        }
    }
};
