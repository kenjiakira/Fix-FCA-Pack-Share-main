const { createReadStream, writeFileSync, unlinkSync } = require('fs-extra');
const axios = require('axios');
const url = require('url');  

module.exports = {
    name: "cap",
    dev: "Mirai Team",
    onPrefix: true,
    category: "Ti·ªán √çch",
    nickName: ["screenshot"],
    usedby: 0,
    info: "Screenshot m·ªôt trang web n√†o ƒë√≥",
    usages: ".cap <url>",
    cooldowns: 0,

    onLaunch: async function({ event, api, target }) {
        const { threadID, messageID } = event;
        
        if (!target || !target[0]) {
            return api.sendMessage(
                "üì∏ H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:\n\n" +
                "C√∫ ph√°p: .cap <url>\n" +
                "V√≠ d·ª•: .cap https://google.com\n\n" +
                "‚ö†Ô∏è L∆∞u √Ω: URL ph·∫£i b·∫Øt ƒë·∫ßu b·∫±ng http:// ho·∫∑c https://", 
                threadID, 
                messageID
            );
        }

        const urlToCapture = target[0];

        try {
            const parsedUrl = url.parse(urlToCapture);
            if (!parsedUrl.protocol || !parsedUrl.host) {
                return api.sendMessage(
                    "‚ùå URL kh√¥ng h·ª£p l·ªá!\n" +
                    "URL ph·∫£i c√≥ ƒë·ªãnh d·∫°ng: http://example.com ho·∫∑c https://example.com", 
                    threadID, 
                    messageID
                );
            }

            const path = __dirname + `/cache/${event.threadID}-${event.senderID}s.png`;
            
            const response = await axios({
                method: 'GET',
                url: `https://image.thum.io/get/width/1920/crop/400/fullpage/noanimate/${urlToCapture}`,
                responseType: 'arraybuffer'
            });

            writeFileSync(path, Buffer.from(response.data, 'binary'));

            await api.sendMessage(
                {
                    body: "üñºÔ∏è ·∫¢nh ch·ª•p m√†n h√¨nh c·ªßa trang web:",
                    attachment: createReadStream(path)
                }, 
                threadID, 
                () => unlinkSync(path)
            );

        } catch (error) {
            console.error("Screenshot error:", error);
            return api.sendMessage(
                "‚ùå Kh√¥ng th·ªÉ ch·ª•p ·∫£nh trang web n√†y.\n" +
                "Vui l√≤ng ki·ªÉm tra l·∫°i URL ho·∫∑c th·ª≠ l·∫°i sau.", 
                threadID, 
                messageID
            );
        }
    }
};