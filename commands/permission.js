module.exports = {
    name: "permission",
    dev: "HNT",
    nickName: ["perm"],
    info: "Xem quy·ªÅn s·ª≠ d·ª•ng l·ªánh",
    onPrefix: true,
    cooldowns: 5,

    onLaunch: async function({ api, event }) {
        const { threadID, senderID } = event;
        const fs = require("fs");
        
        try {
            const adminConfig = JSON.parse(fs.readFileSync("./admin.json", "utf8"));
            const threadInfo = await api.getThreadInfo(threadID);
            const threadAdmins = threadInfo?.adminIDs?.map(admin => admin.id) || [];

            const isAdmin = adminConfig.adminUIDs?.includes(senderID);
            const isMod = adminConfig.moderatorUIDs?.includes(senderID);
            const isThreadAdmin = threadAdmins.includes(senderID);

            let permLevel = "Th√†nh vi√™n th∆∞·ªùng";
            let canUse = "L·ªánh c∆° b·∫£n";

            if (isAdmin) {
                permLevel = "Admin Bot";
                canUse = "T·∫•t c·∫£ l·ªánh";
            } else if (isMod) {
                permLevel = "ƒêi·ªÅu h√†nh vi√™n";
                canUse = "L·ªánh ƒëi·ªÅu h√†nh + L·ªánh qu·∫£n tr·ªã";
            } else if (isThreadAdmin) {
                permLevel = "Qu·∫£n tr·ªã vi√™n nh√≥m";
                canUse = "L·ªánh qu·∫£n tr·ªã nh√≥m";
            }

            const msg = `üë§ Quy·ªÅn h·∫°n c·ªßa b·∫°n:\n` +
                       `‚ñ∏ C·∫•p b·∫≠c: ${permLevel}\n` +
                       `‚ñ∏ C√≥ th·ªÉ d√πng: ${canUse}\n\n` +
                       `üìù Ph√¢n lo·∫°i l·ªánh:\n` +
                       `1Ô∏è‚É£ L·ªánh c∆° b·∫£n: M·ªçi th√†nh vi√™n\n` +
                       `2Ô∏è‚É£ L·ªánh qu·∫£n tr·ªã: QTV nh√≥m\n` +
                       `3Ô∏è‚É£ L·ªánh ƒëi·ªÅu h√†nh: Mod bot\n` +
                       `4Ô∏è‚É£ L·ªánh admin: Ch·ªâ admin bot`;

            return api.sendMessage(msg, threadID);

        } catch (error) {
            console.error(error);
            return api.sendMessage("‚ùå ƒê√£ c√≥ l·ªói x·∫£y ra!", threadID);
        }
    }
};
