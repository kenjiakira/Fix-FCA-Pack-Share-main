Authentication
HTTP Basic Access Authentication is used for verifying accounts.

There are 3 types of api_keys for reaching the data:
account-specific api_key which allows using all the API methods on all the monitors of an account
monitor-specific api_keys which allows using only the getMonitors method for the given monitor
read-only api_key which allows fetching data with all the get* API endpoints
Which api_key type to use?
account-specific api_key is good for pulling data for more than 1 monitors (like listing the stats of all monitors) and/or adding-editing-deleting monitors.

monitor-specific api_keys are good for pulling data for a single monitor without revealing your main api_key (account-specific api_key). For ex: you can use monitor-specific api_keys in client websites (so you'll still be able to pull data and the client will only be able to see the monitor-specific api_key).

read-only api_key is good for pulling data for listing. If you are not going to use create, update or delete methods, you can use read-only api-key.

Where to find the api_keys?
They are found under "My Settings" page.

While making a request, you must send the api_key in your request's body. API key as a query parameter is only allowed for getMonitors endpoint:

https://api.uptimerobot.com/v2/getMonitors?api_key=YOUR_API_KEY_HERE

Rate Limits
We are trying to prevent abusive use of our API. We have rate limits based on user plan.

FREE plan : 10 req/min
PRO plan : monitor limit * 2 req/min ( with maximum value 5000 req/min )
We will return 429 HTTP status code in the response from API, when you hit the rate limits. Also we will return common rate limit response headers in the response :

X-RateLimit-Limit - your current rate limit
X-RateLimit-Remaining - number of calls left in current duration
X-RateLimit-Reset - time since epoch in seconds at which
the rate limiting period will end (or already ended)
Retry-After - Number of second after you should retry the call
CORS
CORS headers are sent only for get* API endpoints with monitor-specific and read-only API keys.
Formats
Responses can either be XML or JSON. Just mention the preferred format as:

https://api.uptimerobot.com/v2/methodName?format=xml

or

https://api.uptimerobot.com/v2/methodName?format=json

In order to get a JSON-P response, the requests need to be sent with a parameter named callback like callback=jsonpUptimeRobot and the response will return as:

jsonpUptimeRobot({...});

Methods
POST getAccountDetails
POST getMonitors
POST newMonitor
POST editMonitor
POST deleteMonitor
POST resetMonitor
POST getAlertContacts
POST newAlertContact
POST editAlertContact
POST deleteAlertContact
POST getMWindows
POST newMWindow
POST editMWindow
POST deleteMWindow
POST getPSPs
POST newPSP
POST editPSP
POST deletePSP
Parameters
All API parameters have to send inside the POST request's body.

Objects	Values	Extra Details
stat	
ok
fail
exists only for JSON responses to show if any records are returned or not.
pagination>offset	integer	the starting record for getMonitors and getAlertContacts methods
pagination>limit	integer	the number of records to be returned for getMonitors and getAlertContacts methods
pagination>total	integer	the total number of records for getMonitors and getAlertContacts methods
account>email	text	the account e-mail.
account>monitor_limit	integer	the max number of monitors that can be created for the account
account>monitor_interval	integer	the min monitoring interval (in seconds) supported by the account
account>up_monitors	integer	the number of "up" monitors
account>down_monitors	integer	the number of "down" monitors
account>pause_monitors	integer	the number of "paused" monitors
monitor>id	integer	the ID of the monitor (can be used for monitor-specific requests).
monitor>friendly_name	text	the friendly name of the monitor.
monitor>url	URL or IP	the URL/IP of the monitor.
monitor>monitor_interval	integer	timeout duration for monitoring check. Used only for only HTTP, keyword, port monitor types (in seconds between 1 to 60, default 30)
monitor>type	
1 - HTTP(s)
2 - Keyword
3 - Ping
4 - Port
5 - Heartbeat
the type of the monitor.
monitor>sub_type	
1 - HTTP (80)
2 - HTTPS (443)
3 - FTP (21)
4 - SMTP (25)
5 - POP3 (110)
6 - IMAP (143)
99 - Custom Port
used only for "Port monitoring (monitor>type = 4)" and shows which pre-defined port/service is monitored or if a custom port is monitored.
monitor>keyword_type	
1 - exists
2 - not exists
used only for "Keyword monitoring (monitor>type = 2)" and shows "if the monitor will be flagged as down when the keyword exists or not exists".
monitor>keyword_case_type	
0 - case sensitive
1 - case insensitive
used only for "Keyword monitoring (monitor>type = 2)" if set the keyword value will be checked as case sensitive or case insensitive according the selection. (case sensitive by default)
monitor>keyword_value	text	the value of the keyword.
monitor>http_username	text	used for password-protected web pages. Available for HTTP and keyword monitoring.
monitor>http_password	text	used for password-protected web pages. Available for HTTP and keyword monitoring.
monitor>http_auth_type	
1 - HTTP Basic Auth
2 - Digest
used for password-protected web pages. Available for HTTP and keyword monitoring
monitor>port	integer	used only for "Port monitoring (monitor>type = 4)" and shows the port monitored.
monitor>interval	integer	the interval for the monitoring check (300 seconds by default).
monitor>status	
0 - paused
1 - not checked yet
2 - up
8 - seems down
9 - down
the status of the monitor. When used with the editMonitor method 0 (to pause) or 1 (to start) can be sent.
monitor>all_time_uptime_ratio	
formatted as up-down-paused

the uptime ratio of the monitor calculated since the monitor is created.
monitor>all_time_uptime_durations	
rational number (with 3 decimals)

the durations of all time up-down-paused events in seconds.
monitor>custom_uptime_ratios	
rational number (with 3 decimals)

the uptime ratio of the monitor for the given periods (if there is more than 1 period, then the values are seperated with "-")
monitor>custom_down_durations	
rational number (with 3 decimals)

the down durations of the monitor for the given periods in seconds(if there is more than 1 period, then the values are seperated with "-")
monitor>custom_uptime_ranges	
rational number (with 3 decimals)

the uptime ratio of the monitor for the given ranges (if there is more than 1 range, then the values are seperated with "-")
monitor>average_response_time	
rational number (with 3 decimals)

the average value of the response times (requires response_times=1)
monitor>custom_http_headers	
JSON object

used for setting custom HTTP headers for the monitor
monitor>custom_http_statuses	
text

For ex: 404:0_200:1 (to accept 404 as down and 200 as up)
monitor>http_method	
1 - HEAD
2 - GET
3 - POST
4 - PUT
5 - PATCH
6 - DELETE
7 - OPTIONS
the HTTP method to be used
monitor>post_type	
1 - key-value
2 - raw data
the format of data to be sent with POST, PUT, PATCH, DELETE, OPTIONS HTTP methods
monitor>post_value	JSON	the data to be sent with POST, PUT, PATCH, DELETE, OPTIONS HTTP methods
monitor>post_content_type	
0 - text/html
1 - application/json
sets the Content-Type for POST, PUT, PATCH, DELETE, OPTIONS HTTP methods
log>type	
1 - down
2 - up
99 - paused
98 - started
the value of the keyword.
log>datetime	Unix time	the date and time of the log (inherits the user's timezone setting).
log>duration	seconds (integer)	the duration of the downtime in seconds.
log>reason	text	the reason of the downtime (if exists).
response_time>datetime	Unix time	the date and time of the log (inherits the user's timezone setting).
response_time>value	Integer	the time to first-byte in milliseconds.
alertcontact>id	integer	the ID of the alert contact.
alertcontact>type	
1 or sms
2 or e-mail
3 or twitter
5 or web-hook
6 or pushbullet
7 or zapier
8 or pro-sms
9 or pushover
11 or slack
14 or voice-call
15 or splunk
16 or pagerduty
17 or opsgenie
20 or ms-teams
21 or google-chat
23 or discord
the type of the alert contact notified.
alertcontact>friendly_name	text	friendly name of the alert contact (for making it easier to distinguish from others).
alertcontact>value	
number:
sms
voice-call
pro-sms
format : 12345678910 (with country code)
email address:
e-mail
boxcar
format : user@uptimerobot.com
api key:
pushover
pushbullet
pagerduty
format : dXB0aW1lcm9ib3Q=
url:
web-hook
slack
zapier
splunk
opsgenie
ms-teams
google-chat
discord
format : https://example.com/webhook/
username:
twitter
format : username	alert contact's email address, phone, username, url or api key depending on the alert contact type.
alertcontact>status	
0 - not activated
1 - paused
2 - active
the status of the alert contact.
alertcontact>threshold	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,30,35,40,45,50,55,60,70,80,90,100,110,120,150,180,210,240,270,300,360,420,480,540,600,660,720	the x value that is set to define "if down for x minutes, alert every y minutes.
alertcontact>recurrence	0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,30,35,40,45,50,55,60	the y value that is set to define "if down for x minutes, alert every y minutes.
mwindow>id	integer	the ID of the maintenance window.
mwindow>type	
1 - Once
2 - Daily
3 - Weekly
4 - Monthly
the type of the maintenance window.
mwindow>friendly_name	text	friendly name of the maintenance window (for making it easier to distinguish from others).
mwindow>value	text	seperated with "-" and used only for weekly and monthly maintenance windows.
mwindow>start_time	Unix time for type=1 and HH:mm for other types.	start time of the maintenance windows.
mwindow>duration	Integer	duration of the maintenance windows in minutes.
mwindow>status	
0 - paused
1 - active
the status of the maintenance window.
psp>id	integer	the ID of the status page.
psp>friendly_name	text	friendly name of the status page (for making it easier to distinguish from others).
psp>monitors	text	the list of monitorIDs to be displayed in status page (the values are seperated with "-" or 0 for all monitors).
psp>custom_domain	text	the domain or subdomain that the status page will run on.
psp>password	text	the password for the status page.
psp>sort	
1 - friendly name (a-z)
2 - friendly name (z-a)
3 - status (up-down-paused)
4 - status (down-up-paused)
the sorting of the status page.
psp>status	
0 - paused
1 - active
the status of the status page.
psp>hide_url_links	boolean	removes the uptimerobot link from the status page (pro plan feature).
