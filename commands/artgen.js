const axios = require('axios');
const fs = require('fs');
const path = require('path');

const STYLES = {
    anime: "(phong c√°ch anime), (chi ti·∫øt), m√†u s·∫Øc s·ªëng ƒë·ªông",
    fantasy: "(ngh·ªá thu·∫≠t k·ª≥ ·∫£o), ma thu·∫≠t, huy·ªÅn b√≠, hi·ªáu ·ª©ng ph√°t s√°ng",
    realistic: "(phong c√°ch th·ª±c t·∫ø), √°nh s√°ng chi ti·∫øt, nhi·∫øp ·∫£nh chuy√™n nghi·ªáp",
    watercolor: "(phong c√°ch m√†u n∆∞·ªõc), m√†u s·∫Øc nh·∫π nh√†ng, ngh·ªá thu·∫≠t, v·∫Ω",
    scifi: "(phong c√°ch khoa h·ªçc vi·ªÖn t∆∞·ªüng), t∆∞∆°ng lai, c√¥ng ngh·ªá, b√≥ng b·∫©y"
};

const BANNED_WORDS = [
    "nsfw", "nude", "naked", "sex", "porn", "hentai", "xxx", "18+", "adult",
    "kh·ªèa th√¢n", "ng·ª±c", "v√°y ng·∫Øn", "bikini", "√°o l√≥t", "n·ªôi y",
    "sexy", "erotic", "lewd", "blood", "gore", "violence",
    "pussy", "loli", "shota", "yaoi", "yuri", "harem",
    "dick", "cock" ,
    "kill", "murder", "death", "suicide", "drugs", "b·∫°o l·ª±c",
    "ma t√∫y", "t·ª± t·ª≠", "gi·∫øt ng∆∞·ªùi", "m√°u me", "ƒë·ªì l√≥t",
    "khi√™u d√¢m", "ti√™u c·ª±c", "ph·∫£n c·∫£m", "nh·∫°y c·∫£m"
];

module.exports = {
    name: "artgen",
    dev: "HNT",
    category: "Media",
    info: "T·∫°o ·∫£nh AIu",
    usedby: 0,
    dmUser: false,
    onPrefix: true,
    usages: ".artgen <prompt> | .artgen style <phong c√°ch> <prompt>",
    cooldowns: 30,

    onLaunch: async function({ api, event, target }) {
        const { threadID, messageID } = event;

        if (!target || target.length === 0) {
            return api.sendMessage(
                "üé® H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng ARTGEN:\n\n" +
                "1. T·∫°o ·∫£nh b√¨nh th∆∞·ªùng:\n.artgen <m√¥ t·∫£ ·∫£nh>\n" +
                "2. T·∫°o ·∫£nh theo phong c√°ch:\n.artgen style <phong c√°ch> <m√¥ t·∫£ ·∫£nh>\n\n" +
                "C√°c phong c√°ch c√≥ s·∫µn:\n" +
                "- anime: Phong c√°ch anime Nh·∫≠t B·∫£n\n" +
                "- fantasy: Ngh·ªá thu·∫≠t k·ª≥ ·∫£o\n" +
                "- realistic: Phong c√°ch th·ª±c t·∫ø\n" +
                "- watercolor: M√†u n∆∞·ªõc ngh·ªá thu·∫≠t\n" +
                "- scifi: Khoa h·ªçc vi·ªÖn t∆∞·ªüng\n\n" +
                "V√≠ d·ª•:\n.artgen m·ªôt c√¥ g√°i d∆∞·ªõi trƒÉng\n.artgen style anime m·ªôt c√¥ g√°i d∆∞·ªõi trƒÉng",
                threadID, messageID
            );
            return;
        }

        let prompt;
        let stylePrefix = "";

        if (target[0].toLowerCase() === "style") {
            const style = target[1]?.toLowerCase();
            if (!style || !STYLES[style]) {
                return api.sendMessage("‚ùå Phong c√°ch kh√¥ng h·ª£p l·ªá! S·ª≠ d·ª•ng .artgen ƒë·ªÉ xem danh s√°ch phong c√°ch.", threadID, messageID);
            }
            stylePrefix = STYLES[style];
            prompt = target.slice(2).join(" ");
        } else {
            prompt = target.join(" ");
        }

        if (!prompt) {
            return api.sendMessage("‚ùå Vui l√≤ng nh·∫≠p m√¥ t·∫£ cho b·ª©c ·∫£nh!", threadID, messageID);
        }

        const promptLower = prompt.toLowerCase();
        const foundBannedWords = BANNED_WORDS.filter(word => promptLower.includes(word));
        
        if (foundBannedWords.length > 0) {
            return api.sendMessage(
                `‚ö†Ô∏è Prompt c·ªßa b·∫°n ch·ª©a t·ª´ ng·ªØ kh√¥ng ph√π h·ª£p!\n` +
                `üö´ T·ª´ kh√¥ng ƒë∆∞·ª£c ph√©p: ${foundBannedWords.join(", ")}\n` +
                `üìù Vui l√≤ng s·ª≠ d·ª•ng ng√¥n t·ª´ ph√π h·ª£p v√† th·ª≠ l·∫°i.`,
                threadID, messageID
            );
        }

        const loadingMessage = await api.sendMessage(
            "üé® ƒêang v·∫Ω t√°c ph·∫©m ngh·ªá thu·∫≠t c·ªßa b·∫°n...\n" +
            "‚è≥ Vui l√≤ng ƒë·ª£i kho·∫£ng 30-60 gi√¢y\n" +
            "üí´ H√£y ki√™n nh·∫´n m·ªôt ch√∫t nh√©!", 
            threadID, messageID
        );

        try {
            const finalPrompt = stylePrefix ? `${stylePrefix}, ${prompt}` : prompt;
            const encodedPrompt = encodeURIComponent(finalPrompt);
            const url = `https://zaikyoo.onrender.com/api/aurora?prompt=${encodedPrompt}`;
            
            const response = await axios.get(url, { responseType: 'arraybuffer' });
            
            const imagePath = path.join(__dirname, 'cache', `artgen_${Date.now()}.png`);
            fs.writeFileSync(imagePath, response.data);

            await api.sendMessage({
                body: `üé® ƒê√¢y l√† t√°c ph·∫©m c·ªßa b·∫°n:\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüîç Prompt: ${prompt}\n${stylePrefix ? `üé≠ Style: ${target[1]}\n` : ""}`,
                attachment: fs.createReadStream(imagePath)
            }, threadID, () => {
                api.unsendMessage(loadingMessage.messageID);
                fs.unlinkSync(imagePath);
            });

        } catch (error) {
            console.error(error);
            api.unsendMessage(loadingMessage.messageID);
            api.sendMessage("‚ùå ƒê√£ c√≥ l·ªói x·∫£y ra khi t·∫°o ·∫£nh. Vui l√≤ng th·ª≠ l·∫°i sau!", threadID, messageID);
        }
    }
};
