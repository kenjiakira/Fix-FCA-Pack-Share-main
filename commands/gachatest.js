const { createPullResultImage, createPvPBattleImage } = require("../canvas/gachaCanvas");
const fs = require("fs");

module.exports = {
  name: "gachatest",
  Dev: "HNT",
  onPrefix: true,
  hide: true,
  usedby: 2,
  usages: ".gachatest [rarity: 3-5] [premium/normal] [stars] | .gachatest pvp [mode] [mix]",
  cooldowns: 5,

  onLaunch: async function ({ api, event, target }) {
    const { threadID, messageID, senderID } = event;
    
    // Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng mu·ªën test ·∫£nh PVP
    if (target[0]?.toLowerCase() === "pvp") {
      return await testPvPBattleImage(api, event, target.slice(1));
    }
    
    const rarity = target[0] || "5";
    
    // X·ª≠ l√Ω c√°c tham s·ªë ƒë∆°n gi·∫£n h∆°n
    let isPremium = target.includes("premium") || target.includes("prem") || target.includes("p");
    
    // T√¨m s·ªë sao trong c√°c tham s·ªë - t√¨m tham s·ªë l√† s·ªë ho·∫∑c c√≥ d·∫°ng "e7", "s8", v.v.
    let starLevel = null;
    for (const param of target) {
      // N·∫øu tham s·ªë l√† s·ªë thu·∫ßn t√∫y
      if (!isNaN(parseInt(param))) {
        const num = parseInt(param);
        if (num > parseInt(rarity)) {
          starLevel = num;
          break;
        }
      }
      // N·∫øu tham s·ªë c√≥ d·∫°ng "e7", "s8", "lvl9", v.v.
      else if (/^[esl]\d+$/i.test(param)) {
        const num = parseInt(param.slice(1));
        if (num > parseInt(rarity)) {
          starLevel = num;
          break;
        }
      }
    }
    
    // Gi·ªõi h·∫°n t·ªëi ƒëa 10 sao
    if (starLevel && starLevel > 10) {
      starLevel = 10;
    }

    if (!["3", "4", "5"].includes(rarity)) {
      return api.sendMessage("‚ö†Ô∏è Rarity ph·∫£i l√† 3, 4 ho·∫∑c 5!", threadID, messageID);
    }

    try {
      // T·∫°o th·∫ª nh√¢n v·∫≠t test
      const testChar = createTestCharacter(rarity, isPremium, starLevel);
      
      // T·∫°o ·∫£nh pull
      const imagePath = await createPullResultImage(testChar);
      
      // T·∫°o th√¥ng b√°o m√¥ t·∫£
      let message = buildCharacterMessage(testChar);

      // Th√™m h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng t·ªëi gi·∫£n
      const helpText = "\n\nüìå C√∫ ph√°p ƒë∆°n gi·∫£n:\n" +
                       ".gachatest 5 p e7 ‚Üí 5‚òÖ Premium ti·∫øn h√≥a 7‚òÖ\n" +
                       ".gachatest 4 e8 ‚Üí 4‚òÖ Normal ti·∫øn h√≥a 8‚òÖ\n" +
                       ".gachatest pvp evol ‚Üí Test PVP v·ªõi nh√¢n v·∫≠t ti·∫øn h√≥a\n" +
                       ".gachatest pvp mix ‚Üí Test PVP v·ªõi nhi·ªÅu lo·∫°i kh√°c nhau";

      return api.sendMessage(
        {
          attachment: fs.createReadStream(imagePath),
          body: message + helpText
        },
        threadID,
        () => fs.unlinkSync(imagePath),
        messageID
      );

    } catch (error) {
      console.error("Gacha test error:", error);
      return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫°o ·∫£nh test: " + error.message, threadID, messageID);
    }
  }
};

// T·∫°o th·∫ª nh√¢n v·∫≠t test
function createTestCharacter(rarity, isPremium, starLevel) {
  // Nhi·ªÅu nh√¢n v·∫≠t ƒë·ªÉ test cho nhi·ªÅu tr∆∞·ªùng h·ª£p
  const charNames = {
    "5": {
      normal: "Nahida",
      premium: "Raiden Shogun"
    },
    "4": {
      normal: "Bennett",
      premium: "Fischl"
    },
    "3": {
      normal: "NPC",
      premium: "Hilichurl"
    }
  };
  
  // C√°c ·∫£nh ƒë·ªÉ test
  const charImages = {
    "5": {
      normal: "https://imgur.com/uvEyzJy.png", // Nahida
      premium: "https://imgur.com/2l5q6Ib.png"  // Raiden
    },
    "4": {
      normal: "https://imgur.com/D8uVCcI.png",  // Bennett
      premium: "https://imgur.com/3UE1s1o.png"  // Yanfei
    },
    "3": {
      normal: "https://imgur.com/2l5q6Ib.png",
      premium: "https://imgur.com/2l5q6Ib.png"
    }
  };
  
  const charElements = {
    "5": {
      normal: "Dendro",
      premium: "Electro"
    },
    "4": {
      normal: "Pyro",
      premium: "Pyro"
    },
    "3": {
      normal: "Anemo",
      premium: "Geo"
    }
  };
  
  const charWeapons = {
    "5": {
      normal: "Catalyst",
      premium: "Polearm"
    },
    "4": {
      normal: "Sword",
      premium: "Catalyst"
    },
    "3": {
      normal: "Bow",
      premium: "Claymore"
    }
  };
  
  // Ch·ªçn nh√¢n v·∫≠t d·ª±a v√†o rarity v√† premium
  const charKey = isPremium ? "premium" : "normal";
  const charName = charNames[rarity][charKey];
  const charImage = charImages[rarity][charKey];
  const charElement = charElements[rarity][charKey];
  const charWeapon = charWeapons[rarity][charKey];
  
  // T√≠nh to√°n gi√° tr·ªã d·ª±a tr√™n ƒë·ªô hi·∫øm v√† ti·∫øn h√≥a
  let cardValue = rarity === "5" ? 5000000 : rarity === "4" ? 50000 : 5000;
  if (isPremium) {
    cardValue *= 100;
  }
  
  // TƒÉng gi√° tr·ªã theo s·ªë sao ti·∫øn h√≥a
  const baseRarity = parseInt(rarity);
  if (starLevel) {
    const extraStars = starLevel - baseRarity;
    const multiplier = Math.pow(2, extraStars); // x2 cho m·ªói sao ti·∫øn h√≥a
    cardValue *= multiplier;
  }

  const testChar = {
    userId: "TEST_USER",
    userName: "Tester",
    character: {
      name: charName,
      image: charImage,
      id: "TEST_001",
      isPremium: isPremium,
      starLevel: starLevel
    },
    rarity: rarity,
    stats: {
      element: charElement,
      weapon: charWeapon,
      quote: isPremium ? "Inazuma Shines Eternal" : "This is a test character",
      skills: ["Test Skill 1", "Test Skill 2"]
    },
    currentRates: {
      FIVE_STAR: 0.6,
      FOUR_STAR: 5.1,
      THREE_STAR: 94.3
    },
    cardValue: cardValue,
    starLevel: starLevel,
    level: starLevel ? Math.min(90, baseRarity * 20) : 1
  };
  
  // TƒÉng stat d·ª±a v√†o s·ªë sao n·∫øu c√≥ ti·∫øn h√≥a
  let statMultiplier = 1;
  if (starLevel) {
    statMultiplier = 1 + ((starLevel - baseRarity) * 0.5); // +50% m·ªói sao
  }
  
  const baseHp = rarity === "5" ? 4000 : rarity === "4" ? 3000 : 2000;
  const baseAtk = rarity === "5" ? 300 : rarity === "4" ? 200 : 150;
  const baseDef = rarity === "5" ? 200 : rarity === "4" ? 150 : 100;

  // T√≠nh to√°n stats d·ª±a v√†o ti·∫øn h√≥a
  testChar.stats.hp = Math.floor(baseHp * statMultiplier);
  testChar.stats.attack = Math.floor(baseAtk * statMultiplier);
  testChar.stats.defense = Math.floor(baseDef * statMultiplier);
  
  return testChar;
}

function buildCharacterMessage(testChar) {
  let message = `üé® Test Canvas Gacha\nüìä Rarity: ${testChar.rarity}‚≠ê`;
  
  if (testChar.character.isPremium) {
    message += "\nüëë Premium Card";
  }
  
  if (testChar.starLevel) {
    message += `\nüåü Ti·∫øn h√≥a: ${testChar.starLevel}‚≠ê`;
    message += `\nüí∞ Gi√° tr·ªã: $${testChar.cardValue.toLocaleString()}`;
    message += `\nüìä Stats: HP ${testChar.stats.hp.toLocaleString()} | ATK ${testChar.stats.attack.toLocaleString()} | DEF ${testChar.stats.defense.toLocaleString()}`;
    message += `\nüìà Level: ${testChar.level}`;
  }
  
  return message;
}

// H√†m test ·∫£nh PVP Battle v·ªõi nhi·ªÅu t√πy ch·ªçn
async function testPvPBattleImage(api, event, options = []) {
  const { threadID, messageID, senderID } = event;
  
  try {
    // X·ª≠ l√Ω c√°c t√πy ch·ªçn
    const hasEvolved = options.includes("evol") || options.includes("e");
    const hasPremium = options.includes("premium") || options.includes("prem") || options.includes("p");
    const has4Star = options.includes("4s") || options.includes("4star");
    const hasMix = options.includes("mix") || options.includes("m");
    
    // T·∫°o d·ªØ li·ªáu ƒë·ªôi h√¨nh d·ª±a tr√™n t√πy ch·ªçn
    let challengerTeam, targetTeam;
    
    if (hasMix) {
      challengerTeam = [
        {
          name: "Nahida", 
          element: "Dendro", 
          level: 90, 
          rarity: 5,
          starLevel: 7, // Ti·∫øn h√≥a
          image: "https://imgur.com/uvEyzJy.png"
        },
        {
          name: "Bennett", 
          element: "Pyro", 
          level: 80, 
          rarity: 4,
          starLevel: 6, // Ti·∫øn h√≥a
          image: "https://imgur.com/D8uVCcI.png"
        },
        {
          name: "Yanfei", 
          element: "Pyro", 
          level: 70, 
          rarity: 4,
          image: "https://imgur.com/3UE1s1o.png"
        }
      ];
      
      targetTeam = [
        {
          name: "Raiden Shogun", 
          element: "Electro", 
          level: 90, 
          rarity: 5,
          isPremium: true,
          starLevel: 8, // Premium ti·∫øn h√≥a
          image: "https://imgur.com/2l5q6Ib.png"
        },
        {
          name: "Hutao", 
          element: "Pyro", 
          level: 85, 
          rarity: 5,
          image: "https://imgur.com/9tuCA1v.png"
        },
        {
          name: "Yelan", 
          element: "Hydro", 
          level: 75, 
          rarity: 5, 
          image: "https://imgur.com/oiNOdqD.png"
        }
      ];
    } 
    else if (has4Star) {
      // T·∫°o ƒë·ªôi h√¨nh 4 sao
      challengerTeam = [
        {
          name: "Bennett", 
          element: "Pyro", 
          level: 80, 
          rarity: 4,
          starLevel: hasEvolved ? 6 : undefined,
          image: "https://imgur.com/D8uVCcI.png"
        },
        {
          name: "Yanfei", 
          element: "Pyro", 
          level: 70, 
          rarity: 4,
          starLevel: hasEvolved ? 7 : undefined,
          image: "https://imgur.com/3UE1s1o.png"
        },
        {
          name: "Barbara", 
          element: "Hydro", 
          level: 70, 
          rarity: 4,
          starLevel: hasEvolved ? 6 : undefined,
          image: "https://imgur.com/4C9Dsl0.png"
        }
      ];
      
      targetTeam = [
        {
          name: "Fischl", 
          element: "Electro", 
          level: 80, 
          rarity: 4,
          isPremium: hasPremium,
          starLevel: hasEvolved ? 8 : undefined,
          image: "https://imgur.com/3UE1s1o.png" // Placeholder
        },
        {
          name: "Thoma", 
          element: "Pyro", 
          level: 75, 
          rarity: 4,
          starLevel: hasEvolved ? 7 : undefined,
          image: "https://imgur.com/wGUtE3a.png"
        },
        {
          name: "Xingqiu", 
          element: "Hydro", 
          level: 80, 
          rarity: 4,
          starLevel: hasEvolved ? 6 : undefined, 
          image: "https://imgur.com/KBX3syb.png" // Placeholder
        }
      ];
    }
    else {
      // ƒê·ªôi h√¨nh ti√™u chu·∫©n 5 sao
      challengerTeam = [
        {
          name: "Nahida", 
          element: "Dendro", 
          level: 90, 
          rarity: 5,
          starLevel: hasEvolved ? 7 : undefined,
          image: "https://imgur.com/uvEyzJy.png"
        },
        {
          name: "Raiden Shogun", 
          element: "Electro", 
          level: 80, 
          rarity: 5,
          isPremium: hasPremium,
          starLevel: hasEvolved ? 7 : undefined,
          image: "https://imgur.com/2l5q6Ib.png"
        },
        {
          name: "Bennett", 
          element: "Pyro", 
          level: 70, 
          rarity: 4,
          starLevel: hasEvolved ? 6 : undefined,
          image: "https://imgur.com/D8uVCcI.png"
        }
      ];
      
      targetTeam = [
        {
          name: "Hutao", 
          element: "Pyro", 
          level: 85, 
          rarity: 5,
          starLevel: hasEvolved ? 6 : undefined,
          image: "https://imgur.com/9tuCA1v.png"
        },
        {
          name: "Yelan", 
          element: "Hydro", 
          level: 75, 
          rarity: 5,
          starLevel: hasEvolved ? 6 : undefined,
          image: "https://imgur.com/oiNOdqD.png"
        },
        {
          name: "Furina", 
          element: "Hydro", 
          level: 60, 
          rarity: 5,
          isPremium: hasPremium,
          starLevel: hasEvolved ? 7 : undefined,
          image: "https://imgur.com/Ovo2GXz.png"
        }
      ];
    }
    
    // T√≠nh s·ª©c m·∫°nh ƒë·ªôi h√¨nh (m√¥ ph·ªèng)
    const challengerPower = 15000 + (hasEvolved ? 5000 : 0) + (hasPremium ? 3000 : 0);
    const targetPower = 16200 + (hasEvolved ? 4500 : 0) + (hasPremium ? 2800 : 0);
    
    // T√≠nh l·ª£i th·∫ø nguy√™n t·ªë (m√¥ ph·ªèng)
    const challengerAdvantage = 1.2;
    const targetAdvantage = 1.3;
    
    // Thi·∫øt l·∫≠p t·ª∑ l·ªá th·∫Øng v√† k·∫øt qu·∫£
    const winChance = 45.5;
    const roll = Math.random() * 100;
    const challengerWins = roll < winChance;
    
    // T·∫°o ·∫£nh PVP Battle
    const imagePath = await createPvPBattleImage({
      challenger: senderID,  // S·ª≠a t·ª´ challenger th√†nh senderID
      target: "100000000000000",
      challengerName: "Ng∆∞·ªùi ch∆°i 1",
      targetName: "Ng∆∞·ªùi ch∆°i 2",
      challengerTeam,
      targetTeam,
      challengerPower,
      targetPower,
      challengerAdvantage,
      targetAdvantage,
      winChance,
      winner: challengerWins ? senderID : "100000000000000",  // S·ª≠a t·ª´ challenger th√†nh senderID
      result: {
        roll: roll,
        winChance: winChance,
        winnerReward: 2000
      }
    }); 
    // T·∫°o th√¥ng b√°o
    let message = "‚öîÔ∏è TEST PVP BATTLE ‚öîÔ∏è\n\n";
    
    // Th√™m ch√∫ th√≠ch v·ªÅ c√°c t√πy ch·ªçn ƒë√£ b·∫≠t
    if (hasEvolved) message += "‚úÖ Ti·∫øn h√≥a: B·∫≠t\n";
    if (hasPremium) message += "‚úÖ Premium: B·∫≠t\n";
    if (has4Star) message += "‚úÖ Nh√¢n v·∫≠t 4 sao: B·∫≠t\n";
    if (hasMix) message += "‚úÖ H·ªón h·ª£p: B·∫≠t\n";
    
    message += `\nüîµ ƒê·ªôi 1: ${challengerPower.toLocaleString()} s·ª©c m·∫°nh (x${challengerAdvantage.toFixed(1)} l·ª£i th·∫ø)\n`;
    message += `üî¥ ƒê·ªôi 2: ${targetPower.toLocaleString()} s·ª©c m·∫°nh (x${targetAdvantage.toFixed(1)} l·ª£i th·∫ø)\n\n`;
    message += `üé≤ T·ª∑ l·ªá th·∫Øng: ${winChance.toFixed(1)}%\n`;
    message += `üéØ Roll: ${roll.toFixed(1)}\n`;
    message += `üèÜ NG∆Ø·ªúI TH·∫ÆNG: ${challengerWins ? "Ng∆∞·ªùi ch∆°i 1" : "Ng∆∞·ªùi ch∆°i 2"}\n`;
    message += `üí∞ Ph·∫ßn th∆∞·ªüng: $2,000\n\n`;
    message += "üìù C√∫ ph√°p test:\n";
    message += ".gachatest pvp - Test m·∫∑c ƒë·ªãnh\n";
    message += ".gachatest pvp e - Th√™m ti·∫øn h√≥a\n";
    message += ".gachatest pvp p - Th√™m premium\n";
    message += ".gachatest pvp 4s - Test nh√¢n v·∫≠t 4 sao\n";
    message += ".gachatest pvp mix - Test nhi·ªÅu lo·∫°i h·ªón h·ª£p";
    
    return api.sendMessage(
      {
        attachment: fs.createReadStream(imagePath),
        body: message
      },
      threadID,
      () => fs.unlinkSync(imagePath),
      messageID
    );
    
  } catch (error) {
    console.error("PVP test error:", error);
    return api.sendMessage("‚ùå ƒê√£ x·∫£y ra l·ªói khi t·∫°o ·∫£nh PVP test: " + error.message, threadID, messageID);
  }
}