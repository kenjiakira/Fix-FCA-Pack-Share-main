const fs = require('fs');
const Downloader = require('../utils/downloader');

module.exports = {
    name: "douyin",
    dev: "HNT",
    category: "Media",
    usedby: 2,
    info: "T·∫£i video t·ª´ Douyin",
    usages: "douyin [link]",
    cooldowns: 5,
    onPrefix: true,

    onLaunch: async function({ api, event, target }) {
        let loadingMsg = null;
        try {
            if (!target[0]) {
                return api.sendMessage(
                    "üì• Douyin Downloader\n\n" +
                    "C√°ch d√πng: douyin [link]",
                    event.threadID
                );
            }

            const url = target[0];
            if (!url.includes('douyin.com')) {
                return api.sendMessage("‚ùå Vui l√≤ng nh·∫≠p link Douyin h·ª£p l·ªá!", event.threadID);
            }

            loadingMsg = await api.sendMessage("‚è≥ ƒêang t·∫£i media t·ª´ Douyin...", event.threadID);

            const data = await Downloader.getMediaInfo(url);
            const mediaDownloads = [];

            if (data.medias && data.medias.length > 0) {
             
                const videos = data.medias.filter(m => m.type === 'video');
                const images = data.medias.filter(m => m.type === 'image');

                if (videos.length > 0) {
                    const sortedVideos = Downloader.sortMediaByQuality(videos);
                    const bestVideo = sortedVideos[0];
                    const download = await Downloader.downloadMedia(bestVideo, 'douyin_video');
                    mediaDownloads.push(download);
                }

                for (const image of images) {
                    if (mediaDownloads.length >= 20) break;
                    const download = await Downloader.downloadMedia(image, 'douyin_image');
                    mediaDownloads.push(download);
                }
            }

            if (mediaDownloads.length === 0) {
                throw new Error('Kh√¥ng t√¨m th·∫•y media ƒë·ªÉ t·∫£i');
            }

            await api.sendMessage({
                body: `üì• T·∫£i th√†nh c√¥ng!\n` +
                      `üë§ T√°c gi·∫£: ${data.author || 'Kh√¥ng x√°c ƒë·ªãnh'}\n` +
                      `üí¨ N·ªôi dung: ${data.title || 'Kh√¥ng c√≥ n·ªôi dung'}\n` +
                      `üìä S·ªë l∆∞·ª£ng: ${mediaDownloads.length} file\n` +
                      (mediaDownloads.find(m => m.type === 'video') ? 'üé• Bao g·ªìm video\n' : '') +
                      (data.description ? `üìù M√¥ t·∫£: ${data.description}\n` : '') +
                      `üîó Link g·ªëc: ${data.url}`,
                attachment: mediaDownloads.map(m => fs.createReadStream(m.path))
            }, event.threadID, () => {
                mediaDownloads.forEach(m => fs.unlinkSync(m.path));
                if (loadingMsg) api.unsendMessage(loadingMsg.messageID);
            });

        } catch (error) {
            console.error('Douyin Download Error:', error);
            if (loadingMsg) api.unsendMessage(loadingMsg.messageID);
            return api.sendMessage(
                `‚ùå L·ªói: ${error.message}\nVui l√≤ng th·ª≠ l·∫°i sau.`,
                event.threadID
            );
        }
    }
};
