const fs = require('fs');
const path = require('path');

const walletFilePath = path.join(__dirname, '..', 'database', 'wallets.json');
const coinPriceFilePath = path.join(__dirname, '..', 'database', 'coinprice.json');

global.coinPrice = global.coinPrice || Math.floor(Math.random() * (100000 - 90000 + 1)) + 90000;

function initializeCoinPriceFile() {
    if (!fs.existsSync(coinPriceFilePath)) {
        fs.writeFileSync(coinPriceFilePath, JSON.stringify({ coinPrice: global.coinPrice }, null, 2), 'utf8');
    }
}

function updateCoinPrice() {
    global.coinPrice = Math.floor(Math.random() * (100000 - 90000 + 1)) + 90000;
    try {
        fs.writeFileSync(coinPriceFilePath, JSON.stringify({ coinPrice: global.coinPrice }, null, 2), 'utf8');
        console.log(`Cập nhật giá coin: 1Coins = ${global.coinPrice} gem`);
    } catch (error) {
        console.error("Lỗi khi ghi vào file coinprice.json:", error);
    }
}

function getCurrentCoinPrice() {
    return global.coinPrice;
}

function initializeWalletsFile() {
    if (!fs.existsSync(walletFilePath)) {
        fs.writeFileSync(walletFilePath, JSON.stringify({}, null, 2), 'utf8');
    }
}

function createWallet(userID) {
    const wallets = JSON.parse(fs.readFileSync(walletFilePath, 'utf8'));
    if (!wallets[userID]) {
        const walletAddress = `wallet_${userID}_${Date.now()}`;
        wallets[userID] = {
            address: walletAddress,
            balance: 0
        };
        fs.writeFileSync(walletFilePath, JSON.stringify(wallets, null, 2), 'utf8');
    }
    return wallets[userID].address;
}

function updateCoinBalance(userID, amount) {
    const wallets = JSON.parse(fs.readFileSync(walletFilePath, 'utf8'));
    if (wallets[userID]) {
        wallets[userID].balance += amount;
    } else {
        wallets[userID] = { balance: amount };
    }
    fs.writeFileSync(walletFilePath, JSON.stringify(wallets, null, 2), 'utf8');
    console.log(`Đã cập nhật số dư ví của người dùng ${userID}: ${wallets[userID].balance} coin.`);
}

function getCoinBalance(userID) {
    const wallets = JSON.parse(fs.readFileSync(walletFilePath, 'utf8'));
    return wallets[userID] ? wallets[userID].balance : 0;
}

function receiveCoin(userID, amount) {
    const wallets = JSON.parse(fs.readFileSync(walletFilePath, 'utf8'));
    if (!wallets[userID]) {
        createWallet(userID);
    }
    updateCoinBalance(userID, amount);
    console.log(`Người dùng ${userID} đã nhận ${amount} coin.`);
    return amount;
}

function buyCoins(userID, amount) {
    const price = getCurrentCoinPrice();
    const totalCost = price * amount;
    const userBalance = getCoinBalance(userID);

    if (userBalance >= totalCost) {
        updateCoinBalance(userID, amount);
        updateCoinBalance(userID, -totalCost);
        return true;
    }
    return false;
}

function sellCoins(userID, amount) {
    const price = getCurrentCoinPrice();
    const userBalance = getCoinBalance(userID);

    if (userBalance >= amount) {
        updateCoinBalance(userID, -amount);
        const receivedGem = amount * price;
        updateCoinBalance(userID, receivedGem);
        return true;
    }
    return false;
}

initializeWalletsFile();
initializeCoinPriceFile();

setInterval(updateCoinPrice, 60000);

module.exports = {
    createWallet,
    getWallet: (userID) => JSON.parse(fs.readFileSync(walletFilePath, 'utf8'))[userID] || null,
    getCoinBalance,
    updateCoinBalance,
    receiveCoin,
    buyCoins,
    sellCoins,
    getCurrentCoinPrice,
    updateCoinPrice
};
